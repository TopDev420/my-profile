{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/slides.jsx","components/features.jsx","components/about.jsx","components/services.jsx","components/image.jsx","components/gallery.jsx","components/testimonials.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","useState","colorChange","setColorchange","window","addEventListener","scrollY","id","className","type","data-toggle","data-target","href","Header","class","data","title","paragraph","width","height","viewBox","points","Slides","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","autoplay","autoplaySpeed","responsive","breakpoint","settings","map","d","i","icon","text","Features","style","padding","About","src","alt","Why","Why2","Services","name","Image","largeImage","smallImage","data-lightbox-gallery","target","Gallery","Testimonials","img","initialState","email","message","Contact","address","phone","skype","discord","telegram","github","rel","App","SmoothScroll","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.44a531f5.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nexport const Navigation = (props) => {\r\n  const [colorChange, setColorchange] = useState(false)\r\n  const changeNavbarColor = () => {\r\n    if (window.scrollY >= 100) {\r\n      setColorchange(true)\r\n    } else {\r\n      setColorchange(false)\r\n    }\r\n  }\r\n  window.addEventListener(\"scroll\", changeNavbarColor)\r\n\r\n  return (\r\n    <nav\r\n      id=\"menu\"\r\n      className={\r\n        colorChange\r\n          ? \"navbar navbar-default navbar-fixed-top colorChange\"\r\n          : \"navbar navbar-default navbar-fixed-top\"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"navbar-toggle collapsed\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#bs-example-navbar-collapse-1\"\r\n          >\r\n            {\" \"}\r\n            <span className=\"sr-only\">Toggle navigation</span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n            <span className=\"icon-bar\"></span>{\" \"}\r\n          </button>\r\n          <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\r\n            Richard Shin\r\n          </a>{\" \"}\r\n        </div>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse\"\r\n          id=\"bs-example-navbar-collapse-1\"\r\n        >\r\n          <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n              <a href=\"#features\" className=\"page-scroll\">\r\n                Skills\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#about\" className=\"page-scroll\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#services\" className=\"page-scroll\">\r\n                Services\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#portfolio\" className=\"page-scroll\">\r\n                Experience\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#testimonials\" className=\"page-scroll\">\r\n                Testimonials\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#contact\" className=\"page-scroll\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","export const Header = (props) => {\r\n  return (\r\n    <header id=\"header\">\r\n      <div className=\"intro\">\r\n        <div id=\"starshine\">\r\n          <div class=\"template shine\"></div>\r\n        </div>\r\n        <div className=\"overlay\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"border-up\"></div>\r\n              <h1>\r\n                {props.data ? props.data.title : \"Loading\"}\r\n                <span></span>\r\n              </h1>\r\n              <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\r\n              <div className=\"border-down\"></div>\r\n              <a href=\"#features\" className=\"btn btn-custom page-scroll\">\r\n                <svg\r\n                  width=\"180px\"\r\n                  height=\"60px\"\r\n                  viewBox=\"0 0 180 60\"\r\n                  class=\"border\"\r\n                >\r\n                  <polyline\r\n                    points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                    class=\"bg-line\"\r\n                  />\r\n                  <polyline\r\n                    points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                    class=\"hl-line\"\r\n                  />\r\n                </svg>\r\n                <span>Learn More</span>\r\n              </a>{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Slider from \"react-slick\"\r\n\r\nexport const Slides = ({ data }) => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 598,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Slider {...settings}>\r\n        {data.data &&\r\n          data.data.map((d, i) => (\r\n            <div key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3 py-5\">\r\n              {\" \"}\r\n              <div className=\"icon\">\r\n                <i className={d.icon}></i>\r\n              </div>\r\n              <h3>{d.title}</h3>\r\n              <p>{d.text}</p>\r\n            </div>\r\n          ))}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n","import { Slides } from \"./slides\"\r\n\r\nexport const Features = (props) => {\r\n  return (\r\n    <div id=\"features\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-between align-items-center\">\r\n          <div style={{ width: \"33.3%\", padding: \"1.5rem\" }}>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <div className=\"col-md-4 section-title\">\r\n            <h2>Skills</h2>\r\n          </div>\r\n          <div style={{ width: \"33.3%\", padding: \"1.5rem\" }}>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </div>\r\n        <Slides data={props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const About = (props) => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            {\" \"}\r\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6 p-0\">\r\n            <div className=\"about-text\">\r\n              <h2>About Me</h2>\r\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\r\n              <h3>Why Choose Me?</h3>\r\n              <div className=\"list-style\">\r\n                <div\r\n                  className=\"col-lg-6 col-sm-6 col-xs-12\"\r\n                  style={{ padding: 0 }}\r\n                >\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why.map((d, i) => (\r\n                          <li key={`${d}-${i}`}>{d}</li>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n                <div\r\n                  className=\"col-lg-6 col-sm-6 col-xs-12\"\r\n                  style={{ padding: 0 }}\r\n                >\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why2.map((d, i) => (\r\n                          <li key={`${d}-${i}`}> {d}</li>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Services = (props) => {\r\n  return (\r\n    <div id=\"services\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h2>My Services</h2>\r\n          <p>I offer a premium service to my clients.</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\r\n                  {\" \"}\r\n                  <i className={d.icon}></i>\r\n                  <div className=\"service-desc\">\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"loading\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Image = ({ title, largeImage, smallImage }) => {\r\n  return (\r\n    <div className=\"portfolio-item\">\r\n      <div className=\"hover-bg\">\r\n        {\" \"}\r\n        <a\r\n          href={largeImage}\r\n          title={title}\r\n          data-lightbox-gallery=\"gallery1\"\r\n          target=\"_blank\"\r\n        >\r\n          <div className=\"hover-text\">\r\n            <h4>{title}</h4>\r\n          </div>\r\n          <img\r\n            src={smallImage}\r\n            className=\"img-responsive\"\r\n            style={{ width: \"100%\", height: \"190px\" }}\r\n            alt={title}\r\n          />{\" \"}\r\n        </a>{\" \"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Image } from \"./image\"\r\n\r\nexport const Gallery = (props) => {\r\n  return (\r\n    <div id=\"portfolio\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h2>Work experiences</h2>\r\n          <p>These are my typical projects.</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"portfolio-items\">\r\n            {props.data\r\n              ? props.data.map((d, i) => (\r\n                  <div\r\n                    key={`${d.title}-${i}`}\r\n                    className=\"col-sm-6 col-md-4 col-lg-4\"\r\n                  >\r\n                    <Image\r\n                      title={d.title}\r\n                      largeImage={d.largeImage}\r\n                      smallImage={d.smallImage}\r\n                    />\r\n                  </div>\r\n                ))\r\n              : \"Loading...\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Testimonials = (props) => {\r\n  return (\r\n    <div id=\"testimonials\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title text-center\">\r\n          <h2>What My clients say</h2>\r\n        </div>\r\n        <div className=\"row\">\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\r\n                  <div className=\"testimonial\">\r\n                    <div className=\"testimonial-image\">\r\n                      {\" \"}\r\n                      <img src={d.img} alt=\"\" />{\" \"}\r\n                    </div>\r\n                    <div className=\"testimonial-content\">\r\n                      <p>\"{d.text}\"</p>\r\n                      <div className=\"testimonial-meta\"> - {d.name} </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"loading\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport emailjs from \"emailjs-com\"\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n}\r\nexport const Contact = (props) => {\r\n  const [{ name, email, message }, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(name, email, message)\r\n    emailjs\r\n      .sendForm(\"YOUR_SERVICE_ID\", \"YOUR_TEMPLATE_ID\", e.target, \"YOUR_USER_ID\")\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text)\r\n          clearState()\r\n        },\r\n        (error) => {\r\n          console.log(error.text)\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <div>\r\n      <div id=\"contact\">\r\n        <div className=\"container\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"section-title\">\r\n                <h2>Contact Info</h2>\r\n                {/* <p>\r\n                  Please fill out the form below to send us an email and we will\r\n                  get back to you as soon as possible.\r\n                </p> */}\r\n              </div>\r\n              {/* <form name=\"sentMessage\" validate onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Name\"\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className=\"help-block text-danger\"></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className=\"help-block text-danger\"></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    name=\"message\"\r\n                    id=\"message\"\r\n                    className=\"form-control\"\r\n                    rows=\"4\"\r\n                    placeholder=\"Message\"\r\n                    required\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <p className=\"help-block text-danger\"></p>\r\n                </div>\r\n                <div id=\"success\"></div>\r\n                <button type=\"submit\" className=\"btn btn-custom btn-lg\">\r\n                  Send Message\r\n                </button>\r\n              </form> */}\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3 col-sm-6 contact-item\">\r\n                  <p>\r\n                    <span>\r\n                      <i className=\"fa fa-map-marker\"></i> Address\r\n                    </span>\r\n                    {props.data ? props.data.address : \"loading\"}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 contact-item\">\r\n                  <p>\r\n                    <span>\r\n                      <i className=\"fa fa-phone\"></i> Phone\r\n                    </span>{\" \"}\r\n                    {props.data ? props.data.phone : \"loading\"}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 contact-item\">\r\n                  <p>\r\n                    <span>\r\n                      <i className=\"fa fa-envelope-o\"></i> Email\r\n                    </span>{\" \"}\r\n                    {props.data ? props.data.email : \"loading\"}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-3 col-sm-6 contact-item\">\r\n                  <p>\r\n                    <span>\r\n                      <i className=\"fa fa-comments-o\"></i> Skype\r\n                    </span>\r\n                    {props.data ? props.data.skype : \"loading\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"social\">\r\n                <ul>\r\n                  <li>\r\n                    <a href={props.data ? props.data.discord : \"/\"}>\r\n                      <i className=\"fa fa-facebook\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href={props.data ? props.data.telegram : \"/\"}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-paper-plane\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href={props.data ? props.data.github : \"/\"}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-github\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"footer\">\r\n        <div className=\"container text-center\">\r\n          <p>\r\n            &copy; 2020 Richard Shin portfolio. Design by{\" \"}\r\n            <a href=\"\" rel=\"nofollow\">\r\n              Richard\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { Navigation } from \"./components/navigation\"\r\nimport { Header } from \"./components/header\"\r\nimport { Features } from \"./components/features\"\r\nimport { About } from \"./components/about\"\r\nimport { Services } from \"./components/services\"\r\nimport { Gallery } from \"./components/gallery\"\r\nimport { Testimonials } from \"./components/testimonials\"\r\nimport { Team } from \"./components/Team\"\r\nimport { Contact } from \"./components/contact\"\r\nimport JsonData from \"./data/data.json\"\r\nimport SmoothScroll from \"smooth-scroll\"\r\nimport \"./App.css\"\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n})\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({})\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      <Features data={landingPageData.Features} />\r\n      <About data={landingPageData.About} />\r\n      <Services data={landingPageData.Services} />\r\n      <Gallery data={landingPageData.Gallery} />\r\n      <Testimonials data={landingPageData.Testimonials} />\r\n      {/* <Team data={landingPageData.Team} /> */}\r\n      <Contact data={landingPageData.Contact} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}